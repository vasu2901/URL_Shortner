// prisma/schema.prisma
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String   @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?  @db.Text
    access_token      String?  @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?  @db.Text
    session_state     String?
    createdAt         DateTime @default(now()) @map(name: "created_at")
    updatedAt         DateTime @default(now()) @map(name: "updated_at")

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@map(name: "accounts")
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map(name: "sessions")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    createdAt     DateTime  @default(now()) @map(name: "created_at")
    updatedAt     DateTime  @default(now()) @map(name: "updated_at")

    OpenRouterKey     String    @default("")
    generated_content Int       @default(0)
    Account           Account[]
    Session           Session[]
    Url               Url[]

    @@map(name: "users")
}

model Url {
    url_id     String     @id @default(uuid())
    user_id    String
    created_by User       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    short_url  String
    long_url   String     @unique
    analytics  Analytics?
    alias      String     @unique
    topic      String
    created_at DateTime
}

model Analytics {
    id           String   @id @default(uuid())
    url_id       String   @unique
    url          Url      @relation(fields: [url_id], references: [url_id], onDelete: Cascade, onUpdate: Cascade)
    totalClicks  Int
    uniqueUsers  Int
    clicksByDate Json[]
    osType       Json[]
    deviceType   Json[]
    IPS          String[]
}
